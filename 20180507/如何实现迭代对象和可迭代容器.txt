python 可迭代对象――Iterable（抽象类是'__iter__'）

Python中经常使用for来对某个对象进行遍历，此时被遍历的这个对象就是可迭代对象，像常见的list、tuple、dict、set、str都是。如果给一个准确的定义的话，就是只要它定义了可以返回一个迭代器的iter方法，或者定义了可以支持下标索引的getitem方法，那么它就是一个可迭代对象。
  

python 迭代器对象――Iterator(抽象类是‘next’)

迭代器是通过next()来实现的，每调用一次他就会返回下一个元素，当没有下一个元素的时候返回一个StopIteration异常，所以实际上定义了这个方法的都算是迭代器。迭代器一定是可迭代对象，反过来则不一定成立。用iter()函数可以把list、dict、str等Iterable变成Iterator
判断是否是迭代对象：iter(l):listiterator,iter(5):不可迭代（not iterable）
迭代器：iteration


问题：用时访问，以便抓取一边显示，但是由于延时导致储存空间浪费。


solution：

step1：实现一个迭代器对象WeatherIterator,next方法每次返回一个城市的气温

step2：实现一个可迭代对象WeatherIterable,__iter__方法返回一个迭代器对象：